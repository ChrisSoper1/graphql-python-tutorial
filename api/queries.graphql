# Exercise 5.
# Run a few queries like `storyWithAuthor` and `authorWithStories.
# Montor the Django logs for the number of queries fired as you add more data.
# - run `invoke start` to run queries against `localhost:8000/graphql`
# - copy this file into the query editor window
# - copy the below text into Query Variables
# {"afterCursor": null, "authorId": "QXV0aG9yVHlwZTo1", "storyId": "U3RvcnlUeXBlOjI="}

# Exercise 4b!
# Test the new fields connecting AuthorType and StoryType added to the schema
query storyWithAuthor($storyId: ID!) {
  story: node(id: $storyId) {
    id
    ... on StoryType {
      title
      author {
        fullName(display: FIRST_LAST)
        twitterAccount
      }
    }
  }
}

query authorWithStories($authorId: ID!) {
  author: node(id: $authorId) {
    id
    ... on AuthorType {
      fullName(display: FIRST_LAST)
      stories {
        edges {
          node {
            id
            title
            publishedYear
          }
        }
      }
    }
  }
}

# Exercise 4!
# Test the new author fields added to the schema
query pageForwardThroughAuthors($afterCursor: String) {
  authors(first: 3, after: $afterCursor) {
    pageInfo {
      endCursor
      hasNextPage
    }
    edges {
      cursor
      node {
        id
        firstName
        lastName
      }
    }
  }
}

query dataForOneAuthor($authorId: ID!) {
  author: node(id: $authorId) {
    id
    ... on AuthorType {
      fullName(display: LAST_FIRST)
      twitterAccount
    }
  }
}

# Exercise 3b!
# Test the Connection Field to paginate through results
# try:
# - run `pageForwardThroughStories` query with $afterCursor variable
# - use `cursor` or `endCursor` field value from query results as a new $afterCursor value
# - experiment with pagination and the query
query pageForwardThroughStories($afterCursor: String) {
  stories(first: 3, after: $afterCursor) {
    pageInfo {
      endCursor
      hasNextPage
    }
    edges {
      cursor
      node {
        id
        title
        subtitle
        description
        authorName(display: FIRST_LAST)
      }
    }
  }
}

# Exercise 3!
# Test the fields that you just added to the schema!
# - run `invoke start` to run queries against `localhost:8000/graphql`
# - copy this file into the query editor window
# - copy the below text into Query Variables
# {"storyId": "U3RvcnlUeXBlOjI="}
# try:
# - query for one story data using the node field and $storyId variable
# - run the `allStoryIds` to find another value for the  $storyId variable
# - change the variable value and run `dataForOneStory` query again
query dataForOneStory($storyId: ID!) {
  story: node(id: $storyId) {
    id
    ... on StoryType {
      title
      authorName
    }
  }
}

# Use this query to get a new story ID
query allStoryIds {
  stories {
    edges {
      node {
        id
      }
    }
  }
}
